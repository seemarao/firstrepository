///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace binding
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The second recording.
    /// </summary>
    [TestModule("931da883-db36-49f0-bb5a-7b00ca47ea5c", ModuleType.Recording, 1)]
    public partial class Second : ITestModule
    {
        /// <summary>
        /// Holds an instance of the bindingRepository repository.
        /// </summary>
        public static bindingRepository repo = bindingRepository.Instance;

        static Second instance = new Second();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Second()
        {
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Second Instance
        {
            get { return instance; }
        }

#region Variables

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "6.0")]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "6.0")]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 50;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Website", "Opening web site 'https://tigers.dubber.net/login' with browser 'chrome' in normal mode.", new RecordItemIndex(0));
            Host.Local.OpenBrowser("https://tigers.dubber.net/login", "chrome", "", false, false, false, false, false);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'Dubber.UserEmail' at 163;30.", repo.Dubber.UserEmailInfo, new RecordItemIndex(1));
            repo.Dubber.UserEmail.Click("163;30");
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence 'qa{RShiftKey down}+{RShiftKey up}' with focus on 'Dubber.UserEmail'.", repo.Dubber.UserEmailInfo, new RecordItemIndex(2));
            repo.Dubber.UserEmail.PressKeys("qa{RShiftKey down}+{RShiftKey up}", 100);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '4{RShiftKey down}@{RShiftKey up}dubber.net' with focus on 'Dubber.UserEmail'.", repo.Dubber.UserEmailInfo, new RecordItemIndex(3));
            repo.Dubber.UserEmail.PressKeys("4{RShiftKey down}@{RShiftKey up}dubber.net", 100);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'Dubber.UserPassword' at 154;26.", repo.Dubber.UserPasswordInfo, new RecordItemIndex(4));
            repo.Dubber.UserPassword.Click("154;26");
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{RShiftKey down}P{RShiftKey up}{RShiftKey down}@{RShiftKey up}ssword1' with focus on 'Dubber.UserPassword'.", repo.Dubber.UserPasswordInfo, new RecordItemIndex(5));
            repo.Dubber.UserPassword.PressKeys("{RShiftKey down}P{RShiftKey up}{RShiftKey down}@{RShiftKey up}ssword1", 100);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'Dubber.SubmitButton' at 57;11.", repo.Dubber.SubmitButtonInfo, new RecordItemIndex(6));
            repo.Dubber.SubmitButton.Click("57;11");
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'Dubber.NewAccount' at 92;12.", repo.Dubber.NewAccountInfo, new RecordItemIndex(7));
            repo.Dubber.NewAccount.Click("92;12");
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'Dubber.AccountExternalReference' at 119;16.", repo.Dubber.AccountExternalReferenceInfo, new RecordItemIndex(8));
            repo.Dubber.AccountExternalReference.Click("119;16");
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence 's' with focus on 'Dubber.AccountExternalReference'.", repo.Dubber.AccountExternalReferenceInfo, new RecordItemIndex(9));
            repo.Dubber.AccountExternalReference.PressKeys("s", 100);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence 'eee' with focus on 'Dubber.AccountExternalReference'.", repo.Dubber.AccountExternalReferenceInfo, new RecordItemIndex(10));
            repo.Dubber.AccountExternalReference.PressKeys("eee", 100);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'Dubber.AccountAddressAttributesAddress' at 84;12.", repo.Dubber.AccountAddressAttributesAddressInfo, new RecordItemIndex(11));
            repo.Dubber.AccountAddressAttributesAddress.Click("84;12");
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence 'asdf' with focus on 'Dubber.AccountAddressAttributesAddress'.", repo.Dubber.AccountAddressAttributesAddressInfo, new RecordItemIndex(12));
            repo.Dubber.AccountAddressAttributesAddress.PressKeys("asdf", 100);
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
